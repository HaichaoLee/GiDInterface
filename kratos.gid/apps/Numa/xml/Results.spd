<?xml version="1.0" encoding="utf-8"?>
<container n="Results" pn="Results" un="Results" icon="results16" state="normal" open="1" open_window="0">
    <value n="FileLabel" pn="File Label" v="step" values="time,step" dict="time,Time,step,Step" help=""/>
    <value n="OutputControlType" pn="Units used for output frequency" un="NumaOutputControlType" v="step" values="time,step" dict="time,Time (s),step,Steps" help="" update_proc="spdAux::RequestRefresh">
        <dependencies node="../value" actualize="1"/>
    </value>
    <value n="OutputDeltaTime" pn="Time between outputs (s)" v="1.0" help="Output will be printed in intervals of this time" state="[getStateFromXPathValue {string(../value[@n='OutputControlType']/@v)} time]"/>
    <value n="OutputDeltaStep" pn="Time steps between outputs" v="1" help="Output will be printed in intervals of this number of steps" state="[getStateFromXPathValue {string(../value[@n='OutputControlType']/@v)} step]"/>
    <value n="BodyOutput" pn="Body output" v="Yes" values="Yes,No" help="The interior of the volume is printed" state="[ShowInMode Developer]"/>
    <value n="NodeOutput" pn="Node output" v="No" values="Yes,No" help="The nodes are printed as a separate layer" state="[ShowInMode Developer]"/>
    <value n="SkinOutput" pn="Skin output" v="No" values="Yes,No" help="" state="[ShowInMode Developer]"/>
    <container n="OnElement" pn="On element" un="ElementResults" state="[ActiveIfAnyPartState]" open_window="0">
        <dynamicnode command="spdAux::injectElementOutputs" args=""/>
        <dynamicnode command="spdAux::injectConstitutiveLawOutputs" args=""/>
    </container>
    <container n="OnNodes" pn="On nodes" un="NodalResults" help="On nodes" state="[ActiveIfAnyPartState]" open_window="0">
        <value n="DISPLACEMENT" pn="Displacement" v="Yes" values="Yes,No" help="" state="[checkStateByUniqueName NumaTypeofProblem Mechanical NumaTypeofProblem Thermo-Mechanical]"/>
        <value n="REACTION" pn="Reaction" v="No" values="Yes,No" help="" state="[checkStateByUniqueName NumaTypeofProblem Mechanical NumaTypeofProblem Thermo-Mechanical]"/>
        <value n="VELOCITY" pn="Velocity" v="No" values="Yes,No" help="" state="[checkStateByUniqueName NumaTypeofProblem Mechanical NumaTypeofProblem Thermo-Mechanical]"/>
        <value n="ACCELERATION" pn="Acceleration" v="No" values="Yes,No" help="" state="[checkStateByUniqueName NumaTypeofProblem Mechanical NumaTypeofProblem Thermo-Mechanical]"/>
        <value n="TEMPERATURE" pn="Temperature" v="Yes" values="Yes,No" help="" state="[checkStateByUniqueName NumaTypeofProblem Thermo-Mechanical]" />
        <value n="VOLUME_ACCELERATION" pn="Body Accelerations" v="No" values="Yes,No" help="" state="[checkStateByUniqueName NumaTypeofProblem Mechanical NumaTypeofProblem Thermo-Mechanical]"/>
        <value n="NEGATIVE_FACE_PRESSURE" pn="Hydrostatic Loads" v="No" values="Yes,No" help="This output includes; hydrostatic loads, uplift loads.." state="[checkStateByUniqueName NumaTypeofProblem Mechanical NumaTypeofProblem Thermo-Mechanical]"/>
        <value n="NODAL_CAUCHY_STRESS_TENSOR" pn="Nodal Total Stress" v="No" values="Yes,No" help="" state="[checkStateByUniqueName NumaTypeofProblem Mechanical NumaTypeofProblem Thermo-Mechanical]"/>
        <value n="NODAL_JOINT_WIDTH" pn="Nodal Joint Width" v="No" values="Yes,No" help="" state="[checkStateByUniqueName NumaTypeofProblem Mechanical NumaTypeofProblem Thermo-Mechanical]"/>
        <value n="Vi_POSITIVE" pn="Traction Principal Stress Vector" v="No" values="Yes,No" help="" state="[checkStateByUniqueName NumaTypeofProblem Mechanical NumaTypeofProblem Thermo-Mechanical]"/>
        <value n="Viii_POSITIVE" pn="Compression Principal Stress Vector" v="No" values="Yes,No" help="" state="[checkStateByUniqueName NumaTypeofProblem Mechanical NumaTypeofProblem Thermo-Mechanical]"/>
        <value n="NODAL_YOUNG_MODULUS" pn="Young Modulus Variable" v="No" values="Yes,No" help="Young Modulus variable in case of use the calibration condition" state="[checkStateByUniqueName NumaTypeofProblem Mechanical NumaTypeofProblem Thermo-Mechanical]"/>
    </container>
    <container n="GiDOptions" pn="Options" help="GiD postprocess options" open_window="0">
        <value n="GiDPostMode" pn="Result format" v="GiD_PostBinary" values="GiD_PostBinary,GiD_PostAscii,GiD_PostAsciiZipped" dict="GiD_PostBinary,Binary,GiD_PostAscii,Ascii,GiD_PostAsciiZipped,Ascii zipped" help="GiD result file format" />
        <value n="GiDWriteMeshFlag" pn="Write deformed mesh" v="WriteDeformed" values="WriteDeformed,WriteUndeformed" dict="WriteDeformed,Write deformed,WriteUndeformed, Write undeformed" help="Write the GiD deformed or undeformed mesh"/>
        <value n="GiDWriteConditionsFlag" pn="Write conditions" v="WriteElementsOnly" values="WriteConditions,WriteElementsOnly,WriteConditionsOnly" dict="WriteConditions,Write conditions,WriteElementsOnly,Write elements only,WriteConditionsOnly,Write conditions only" help="Write the conditions or only element to the GiD result file"/>
        <value n="GiDMultiFileFlag" pn="Result file" v="SingleFile" values="SingleFile,MultipleFiles" help="Write one GiD result file or multiple files"/>
        <value n="EchoLevel" pn="Verbosity of terminal output" v="0" values="0,1,2,3" help="Verbosity on screen output during process. \n0 -> Low verbosity \n3 -> High verbosity"/>
    </container>
    <container n="CutPlanes" pn="Cut planes"  icon="material16" state="[checkStateByUniqueName nDim 3D]" open_window="0">
        <blockdata n='CutPlane' name='CutPlane' editable_name="unique" sequence='1' can_delete_last_item='1'>
            <value n="point" pn="Point" fieldtype="vector" dimensions="3" format="%.6g" v="0.0,0.0,0.0" pick_point="0"/>
            <value n="normal" pn="Normal" fieldtype="vector" dimensions="3" format="%.6g" v="0.0,0.0,0.0" pick_point="0"/>
        </blockdata>
    </container>
</container>